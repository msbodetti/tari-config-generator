{"version":3,"sources":["util.js","components/Editor.js","components/controls/Select.js","components/Section.js","system.js","components/TopBar.js","components/Modal.js","components/Importer.js","components/Preview.js","components/Presets/Presets.js","components/Presets/index.js","App.js","components/Loader.js","index.js","components/Item.js"],"names":["data","axios","require","promises","default","JSON_CONFIG_URL","mix","a","b","Array","isArray","Object","keys","forEach","key","clone","val","JSON","parse","stringify","loadSource","get","response","console","error","Editor","change","section","prop","value","props","onChange","settings","prevProps","__internal","configMode","this","window","componentHandler","upgradeDom","platform","base","common","base_path","basePath","isSimple","select","renderConfig","simple","sections","filter","sectionName","includeSection","eval","condition","debug","some","propName","log","name","map","items","deprecated","item","disable","enable","enabled","type","flag","multiselect","datalist","path","list","text","number","title","description","isEnabled","check","or","fillDescription","disabled","values","id","allowInput","suggestions","toLowerCase","current","ev","checked","target","newValue","idx","indexOf","push","splice","large","className","htmlFor","Number","min","max","replace","localPath","joinPath","split","processValue","x","toString","v","style","bottom","right","zIndex","transform","onClick","concat","Component","warn","def","undefined","Error","match","Select","selected","find","display","data-val","onKeyDown","handleKeyPress","classnames","readOnly","keyCode","dispatchEvent","MouseEvent","defaultPropTypes","styles","sectionVisible","sectionHidden","visibility","height","Section","args","state","collapsed","toggleCollapsed","setState","newProps","children","cursor","defaultProps","detectPlatform","navigator","userAgent","join","TopBar","Modal","ReactDOM","findDOMNode","close","showModal","dialog","dialogPolyfill","registerDialog","isOpen","setTimeout","show","onClose","Importer","handleFileChange","bind","handleClick","file","files","domTarget","confirm","reader","FileReader","onload","_","importedData","toml","result","err","onError","defaults","blur","readAsText","refs","fileInput","click","ref","PureComponent","toToml","reduce","acc","sectionDescription","heading","width","banner","repeat","inner","left_pad","Math","floor","length","right_pad","toSectionHeader","split_comment_at","vals","comment","toComment","setting","toVal","configPath","unshift","multi_comment","line_length","lines","words","line","shift","Preview","generateConfig","blob","Blob","msSaveOrOpenBlob","msSaveBlob","elem","document","createElement","href","URL","createObjectURL","download","body","appendChild","removeChild","rel","location","presets","Presets","preset","forceUpdate","Item","loadSettings","defaultSettings","generateDefaults","localStorage","getItem","e","setItem","loadFromLocalStorage","url","hash","startsWith","config","atob","loadFromURL","errors","settingsValue","defaultSettingsValue","expected","saveSettings","cloned","isEqual","json","btoa","d","App","handleChange","handlePreset","handleError","modal","visible","content","lis","i","Loader","marginTop","textAlign","rootElement","getElementById","render","then","catch","stylesNormal","overflow","stylesLarge","isDisabled"],"mappings":"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","file":"static/js/main.b0d1b30a.chunk.js","sourcesContent":["const fs = require('fs').promises;\nconst path = require('path');\nconst axios = require('axios').default;\n\nconst JSON_CONFIG_URL = \"https://raw.githubusercontent.com/tari-project/tari/config/tari.config.json\";\nconst PRESET_CONFIG_URL = \"https://raw.githubusercontent.com/tari-project/tari/config/preset\";\n\nfunction mix (a, b) {\n  if (typeof a !== 'object' || typeof b !== 'object' || Array.isArray(a) || Array.isArray(b)) {\n    return typeof b === 'undefined' ? a : b;\n  }\n\n  Object.keys(a).forEach(key => {\n    a[key] = mix(a[key], b[key]);\n  });\n\n  return a;\n}\n\nfunction clone (val) {\n  return JSON.parse(JSON.stringify(val));\n}\n\nlet data;\n\nasync function loadSource() {\n  try {\n    const response = await axios.get(JSON_CONFIG_URL);\n    data = response.data;\n  } catch (error) {\n    console.error(`Could not fetch JSON config. Falling back to local copy. ${error}`);\n    data = require('./tari.config'); //If this is called from the web we can't read the contents of the file with `fetchExtraData()`\n  }\n}\n\nasync function fetchPresets(presets) {\n  try {\n    const requests = presets.map(p => {\n      let req = {responseType: 'text'};\n      return axios.get(`${PRESET_CONFIG_URL}/${p}.toml`, req);\n    });\n    const response = await axios.all(requests);\n    return response.map(res => res.data);\n  } catch (error) {\n    console.error(`Could not fetch presets config. ${error}`);\n    return [];\n  }\n}\n\nasync function fetchExtraData() {\n  return JSON.parse(await fs.readFile(path.resolve(__dirname, './tari.config.json'), 'UTF-8'));\n}\n\nexport {mix, clone, loadSource, data, fetchExtraData, fetchPresets};\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Section from './Section';\nimport Item from './Item';\nimport Select from './controls/Select';\n\nimport { localPath, basePath, joinPath } from '../system';\n\nimport 'material-design-lite';\nimport {data} from \"../util\";\n\nclass Editor extends Component {\n\n  static propTypes = {\n    settings: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired\n  };\n\n  change = (section, prop) => {\n    return value => {\n      this.props.onChange({\n        ...this.props.settings,\n        [section]: {\n          ...this.props.settings[section],\n          [prop]: value\n        }\n      });\n    };\n  };\n\n  componentDidUpdate (prevProps) {\n    if (prevProps.settings.__internal.configMode !== this.props.settings.__internal.configMode) {\n      window.componentHandler.upgradeDom();\n    }\n  }\n\n  render () {\n    const {settings} = this.props;\n    const {configMode, platform} = settings.__internal;\n    const base = settings.common.base_path !== '$BASE' ? settings.common.base_path : basePath(platform);\n\n    const isSimple = configMode === 'simple';\n    return (\n      <div>\n        { this.select('__internal', 'platform') }\n        { this.select('__internal', 'configMode') }\n        <div>\n          { this.renderConfig(isSimple, settings, platform, base) }\n        </div>\n      </div>\n    );\n  }\n\n  renderConfig (simple, settings, platform, base) {\n    this.configMode = simple ? 'simple' : 'advanced';\n\n    const sections = Object.keys(data)\n      .filter(sectionName => sectionName !== '__internal')\n      .filter(sectionName => {\n          const section = data[sectionName];\n          let includeSection = true;\n          if ('condition' in section) {\n              // eslint-disable-next-line no-eval\n              includeSection = eval(section.condition);\n          }\n          if (!includeSection) {\n              console.debug(`Section ${sectionName} excluded due to matching condition`);\n          }\n          return !!includeSection\n      })\n      .filter(sectionName => !simple ||\n          Object.keys(data[sectionName]).some(propName => {\n            const prop = data[sectionName][propName];\n            console.log(`${data[sectionName][propName].name}: ${prop.simple}`);\n            return typeof prop === 'object' && prop.simple;\n          })\n      )\n      .map(sectionName => {\n        const section = data[sectionName];\n\n\n\n        let items = Object.keys(section)\n            .filter(key => key !== 'section' && key !== 'description' && key !== 'condition')\n            .filter(propName => !section[propName].deprecated)\n            .filter(propName => !simple || section[propName].simple)\n            .map(propName => {\n              const prop = section[propName];\n\n              let condition = true;\n              if ('disable' in section && propName !== 'disable') {\n                condition = condition && !settings[sectionName].disable;\n              } else if ('enable' in section && propName !== 'enable') {\n                condition = condition && settings[sectionName].enable;\n              } else if ('enabled' in section && propName !== 'enabled') {\n                condition = condition && settings[sectionName].enabled;\n              }\n\n              if ('condition' in prop) {\n                // eslint-disable-next-line no-eval\n                condition = condition && eval(prop.condition);\n              }\n\n              let item;\n              if (prop.type === 'bool') {\n                item = this.flag(sectionName, propName, condition);\n              } else if ('values' in prop) {\n                if (prop.type === 'string[]') {\n                  item = this.multiselect(sectionName, propName, condition);\n                } else {\n                  item = this.select(sectionName, propName, condition);\n                }\n              } else if ('suggestions' in prop) {\n                item = this.datalist(sectionName, propName, condition);\n              } else if (prop.type === 'path') {\n                item = this.path(sectionName, propName, base, platform, condition);\n              } else if (prop.type === 'string[]') {\n                item = this.list(sectionName, propName, condition);\n              } else if (prop.type === 'string') {\n                item = this.text(sectionName, propName, condition);\n              } else if (prop.type === 'number') {\n                item = this.number(sectionName, propName, condition);\n              }\n\n              return (\n                <Fragment key={`${simple}.${sectionName}.${propName}`}>\n                  {item}\n                </Fragment>\n              );\n            });\n\n        return (\n          <Section key={`${simple}.${section.section}`} title={section.section} description={section.description}>\n            { items }\n          </Section>\n        );\n      });\n\n    return (<div>{sections}</div>);\n  }\n\n  select (section, prop, isEnabled = true) {\n    check(section, prop);\n\n    // TODO [ToDr] hacky\n    const {configMode} = this;\n\n    const {settings} = this.props;\n    const value = or(settings[section][prop], data[section][prop].default);\n    const description = fillDescription(data[section][prop].description[value], value, `${section}.${prop}`);\n\n    return (\n      <Item\n        title={data[section][prop].name}\n        description={description}\n        disabled={!isEnabled}\n        >\n        <Select\n          onChange={this.change(section, prop)}\n          value={value}\n          values={data[section][prop].values.map(val)}\n          id={`${configMode}_${prop}`}\n          disabled={!isEnabled}\n          allowInput={false}\n        />\n      </Item>\n    );\n  }\n\n  datalist (section, prop, isEnabled = true) {\n    check(section, prop);\n\n    // TODO [ToDr] hacky\n    const {configMode} = this;\n\n    const {settings} = this.props;\n    const value = or(settings[section][prop], data[section][prop].default);\n    const suggestions = data[section][prop].suggestions.map(val);\n    const description = suggestions.some(val => val.value === value)\n      ? fillDescription(data[section][prop].description[value], value, `${section}.${prop}`)\n      : `Custom ${data[section][prop].name.toLowerCase()}`;\n\n    return (\n      <Item\n        title={data[section][prop].name}\n        description={description}\n        disabled={!isEnabled}\n        >\n        <Select\n          onChange={this.change(section, prop)}\n          value={value}\n          values={suggestions}\n          id={`${configMode}_${prop}`}\n          disabled={!isEnabled}\n          allowInput\n        />\n      </Item>\n    );\n  }\n\n  multiselect (section, prop, isEnabled = true) {\n    check(section, prop);\n\n    // TODO [ToDr] hacky\n    const {configMode} = this;\n\n    const {settings} = this.props;\n    const current = settings[section][prop] || [];\n    const description = fillDescription(data[section][prop].description, current);\n\n    const change = (val) => (ev) => {\n      const {checked} = ev.target;\n      const newValue = [...current];\n      const idx = newValue.indexOf(val);\n\n      if (checked) {\n        newValue.push(val);\n      } else if (idx !== -1) {\n        newValue.splice(idx, 1);\n      }\n\n      this.change(section, prop)(newValue);\n    };\n\n    return (\n      <Item\n        title={data[section][prop].name}\n        description={description}\n        disabled={!isEnabled}\n        large\n        >\n        {data[section][prop].values.map(val).map(value => {\n          const id = `${configMode}_${section}_${prop}_${value.value}`;\n\n          return (\n            <label className='mdl-switch mdl-js-switch' htmlFor={id} key={value.name}>\n              <input\n                type='checkbox'\n                id={id}\n                className='mdl-switch__input'\n                checked={current.indexOf(value.value) !== -1}\n                disabled={!isEnabled}\n                onChange={change(value.value)}\n                />\n              <span className='mdl-switch__label'>{value.name}</span>\n            </label>\n          );\n        })}\n      </Item>\n    );\n  }\n\n  number (section, prop, isEnabled = true) {\n    check(section, prop);\n    const {settings} = this.props;\n    const value = or(settings[section][prop], data[section][prop].default);\n    const description = fillDescription(data[section][prop].description, value);\n\n    return (\n      <Item\n        title={data[section][prop].name}\n        description={description}\n        disabled={!isEnabled}\n        >\n        <div className='mdl-textfield mdl-js-textfield mdl-textfield--floating-label'>\n          <input\n            className='mdl-textfield__input'\n            type='number'\n            value={value || 0}\n            onChange={(ev) => this.change(section, prop)(Number(ev.target.value))}\n            min={data[section][prop].min}\n            max={data[section][prop].max}\n            disabled={!isEnabled}\n            />\n          <span className='mdl-textfield__error'>Please provide a valid number (min: {data[section][prop].min}, max: {data[section][prop].max})</span>\n        </div>\n      </Item>\n    );\n  }\n\n  path (section, prop, base, platform, isEnabled = true) {\n    return this.text(section, prop, isEnabled, value => {\n      if (!value) {\n        return value;\n      }\n      value = value.replace('$LOCAL', localPath(platform));\n      value = value.replace('$BASE', base);\n      // normalize separators\n      value = joinPath(value.split('\\\\'), platform);\n      value = joinPath(value.split('/'), platform);\n      return value;\n    });\n  }\n\n  text (section, prop, isEnabled = true, processValue = x => x) {\n    check(section, prop);\n    const {settings} = this.props;\n    const value = processValue(or(settings[section][prop], data[section][prop].default));\n    const description = fillDescription(data[section][prop].description, value);\n\n    return (\n      <Item\n        title={data[section][prop].name}\n        description={description}\n        disabled={!isEnabled}\n        >\n        <div className='mdl-textfield mdl-js-textfield mdl-textfield--floating-label'>\n          <input\n            className='mdl-textfield__input'\n            type='text'\n            value={value || ''}\n            onChange={(ev) => this.change(section, prop)(ev.target.value)}\n            disabled={!isEnabled}\n            />\n        </div>\n      </Item>\n    );\n  }\n\n  flag (section, prop, isEnabled = true) {\n    check(section, prop);\n\n    // TODO [ToDr] hacky\n    const {configMode} = this;\n\n    const {settings} = this.props;\n    const value = or(settings[section][prop], data[section][prop].default);\n    const description = fillDescription(data[section][prop].description, value);\n    const id = `${configMode}_${section}_${prop}`;\n\n    return (\n      <Item\n        title={data[section][prop].name}\n        description={description}\n        disabled={!isEnabled}\n        >\n        <label className='mdl-switch mdl-js-switch' htmlFor={id}>\n          <input\n            type='checkbox'\n            id={id}\n            className='mdl-switch__input'\n            checked={value}\n            disabled={!isEnabled}\n            onChange={(ev) => this.change(section, prop)(ev.target.checked)}\n            />\n          <span className='mdl-switch__label' />\n        </label>\n      </Item>\n    );\n  }\n\n  list (section, prop, isEnabled = true) {\n    check(section, prop);\n    const {settings} = this.props;\n    const value = or(settings[section][prop], data[section][prop].default);\n    const description = fillDescription(data[section][prop].description, value.toString());\n\n    return (\n      <Item\n        title={data[section][prop].name}\n        description={description}\n        disabled={!isEnabled}\n        >\n        <div className='mdl-textfield mdl-js-textfield mdl-textfield--floating-label'>\n          {value.map((v, idx) => (\n            <input\n              disabled={!isEnabled}\n              key={idx}\n              className='mdl-textfield__input'\n              type='text'\n              value={v || ''}\n              onChange={(ev) => {\n                const newValue = [...value];\n                if (ev.target.value !== '') {\n                  newValue[idx] = ev.target.value;\n                } else {\n                  newValue.splice(idx, 1);\n                }\n                this.change(section, prop)(newValue);\n              }}\n              />\n          ))}\n          <br />\n          <button\n            style={{bottom: 0, right: 0, zIndex: 10, transform: 'scale(0.5)'}}\n            className='mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab mdl-js-ripple-effect'\n            onClick={() => this.change(section, prop)(value.concat(['']))}\n            disabled={!isEnabled}\n            >\n            <i className='material-icons'>add</i>\n          </button>\n        </div>\n      </Item>\n    );\n  }\n}\n\nexport function fillDescription(description, value, key) {\n  if (!description) {\n    console.warn(`Cant find description for: value:${value} at ${key}`);\n    return 'unknown entry';\n  }\n  return description.replace(/{}/g, value || '');\n}\n\nfunction or(value, def) {\n  if (value === undefined) {\n    return def;\n  }\n  return value;\n}\n\nfunction check(section, prop) {\n  if (!data[section][prop]) {\n    throw new Error(`Can't find data for ${section}.${prop}`);\n  }\n}\n\nfunction val(data) {\n  const match = data.match(/(.+)\\s+\\[(.+)]/);\n  if (!match) {\n    return { name: data, value: data };\n  }\n\n  return {\n    name: match[1],\n    value: match[2]\n  };\n}\n\nexport default Editor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport './Select.css';\n\nfunction Select ({value, onChange, values, id, disabled, allowInput}) {\n  const selected = values.find(val => val.value === value) ||\n    (allowInput && {name: value, value}) ||\n    {};\n\n  // We cannot just remove options, since mdl is adding some additional dom nodes.\n  const list = (\n    <ul\n      className='mdl-menu mdl-menu--bottom-left mdl-js-menu'\n      htmlFor={id}\n      style={disabled ? { display: 'none' } : {}}\n    >\n      {\n        values.map(({name, value}) => (\n          <li className='mdl-menu__item' data-val={value} key={value} onClick={() => onChange(value)}>{name}</li>\n        ))\n      }\n    </ul>\n  );\n\n  return (\n    <div className='mdl-textfield mdl-js-textfield mdl-textfield--floating-label getmdl-select'>\n      <input\n        onKeyDown={handleKeyPress}\n        className={classnames('mdl-textfield__input', {\n          'is-disabled': disabled // Overcome mdl light issues\n        })}\n        disabled={disabled}\n        value={selected.name}\n        type='text'\n        id={id}\n        readOnly={!allowInput}\n        {... (allowInput ? {onChange: (ev) => onChange(ev.target.value)} : {})}\n        data-val={selected.value}\n        />\n      {list}\n    </div>\n  );\n}\n\nfunction handleKeyPress (ev) {\n  if (ev.keyCode === 13) {\n    ev.target.dispatchEvent(new window.MouseEvent('click'));\n  }\n}\n\nSelect.propTypes = {\n  id: PropTypes.string.isRequired,\n  value: PropTypes.any.isRequired,\n  onChange: PropTypes.func.isRequired,\n  values: PropTypes.array.isRequired,\n  disabled: PropTypes.bool,\n  allowInput: PropTypes.bool\n};\n\nSelect.defaultPropTypes = {\n  disabled: false,\n  allowInput: false\n};\n\nexport default Select;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Section.css';\n\nconst styles = {\n  sectionVisible: {},\n  sectionHidden: {\n    visibility: 'hidden',\n    height: 0\n  }\n};\n\nclass Section extends Component {\n\n  state = {\n    collapsed: true\n  };\n\n  constructor (...args) {\n    super(...args);\n    this.state = {\n      collapsed: this.props.collapsed\n    };\n  }\n\n  componentWillReceiveProps (newProps) {\n    if (this.props.collapsed !== newProps.collapsed) {\n      this.setState({\n        collapsed: newProps.collapsed\n      });\n    }\n  }\n\n  toggleCollapsed = () => {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  };\n\n  render () {\n    const {title, description, children} = this.props;\n    const {collapsed} = this.state;\n    return (\n      <div className='section'>\n        <h5 onClick={this.toggleCollapsed} style={{cursor: 'pointer'}}>\n          <button className='mdl-button mdl-js-button mdl-button--icon'>\n            {collapsed ? (\n              <i className='material-icons'>expand_more</i>\n            ) : (\n              <i className='material-icons'>expand_less</i>\n            )}\n          </button>\n          {title}\n        </h5>\n        <p>{description}</p>\n        <ul className='mdl-list section-list' style={collapsed ? styles.sectionHidden : styles.sectionVisible}>\n          {children}\n        </ul>\n      </div>\n    );\n  }\n\n  static propTypes = {\n    collapsed: PropTypes.bool,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([PropTypes.element, PropTypes.array]).isRequired\n  };\n\n  static defaultProps = {\n    collapsed: true\n  };\n}\n\nexport default Section;\n","export function detectPlatform () {\n  if (window.navigator.userAgent.indexOf('Windows') !== -1) {\n    return 'Windows';\n  }\n\n  if (window.navigator.userAgent.indexOf('Mac') !== -1) {\n    return 'Mac OS';\n  }\n\n  return 'Linux';\n}\n\nexport function joinPath (path, platform) {\n  if (platform === 'Windows') {\n    return path.join('\\\\');\n  }\n\n  return path.join('/');\n}\n\nexport function localPath (platform) {\n  if (platform === 'Windows') {\n    return joinPath([\n      '%UserProfile%',\n      'AppData',\n      'Local',\n      'Tari',\n    ], platform);\n  }\n\n  return '$BASE';\n}\n\nexport function basePath (platform) {\n  if (platform === 'Windows') {\n    return joinPath([\n      '%AppData%',\n      'tari',\n    ], platform);\n  }\n\n  if (platform === 'Mac OS') {\n    return joinPath([\n      '$HOME',\n      '.tari',\n    ], platform);\n  }\n\n  return joinPath([\n    '~',\n    '.tari',\n  ], platform);\n}\n","import React from 'react';\n\nfunction TopBar () {\n  return (\n    <div className='mdl-layout__header'>\n      <div className='mdl-layout__header-row'>\n        <span className='mdl-layout-title'>Tari Config Generator</span>\n        <div className='mdl-layout-spacer' />\n      </div>\n    </div>\n  );\n}\n\nexport default TopBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport dialogPolyfill from 'dialog-polyfill/dialog-polyfill.js';\nimport 'dialog-polyfill/dialog-polyfill.css';\nimport './Modal.css';\n\nclass Modal extends Component {\n\n  static propTypes = {\n    isOpen: PropTypes.bool,\n    title: PropTypes.string,\n    onClose: PropTypes.func.isRequired,\n    children: PropTypes.object\n  };\n\n  close () {\n    ReactDOM.findDOMNode(this).close();\n  }\n\n  show () {\n    ReactDOM.findDOMNode(this).showModal();\n  }\n\n  componentDidMount () {\n    const dialog = ReactDOM.findDOMNode(this);\n    if (!dialog.showModal) {\n      dialogPolyfill.registerDialog(dialog);\n    }\n\n    if (this.props.isOpen) {\n      // Delay is a workaround for paint issue (modal overlay not showing up)\n      setTimeout(() => { this.show(); }, 100);\n    }\n  }\n\n  componentDidUpdate (prevProps) {\n    if (prevProps.isOpen && !this.props.isOpen) {\n      this.close();\n    } else if (!prevProps.isOpen && this.props.isOpen) {\n      this.show();\n    }\n  }\n\n  render () {\n    return (\n      <dialog className='mdl-dialog'>\n        <h4 className='mdl-dialog__title'>{this.props.title}</h4>\n        <div className='mdl-dialog__content'>\n          {this.props.children}\n        </div>\n        <div className='mdl-dialog__actions'>\n          <button type='button' className='mdl-button close' onClick={this.props.onClose}>OK</button>\n        </div>\n      </dialog>\n    );\n  }\n}\n\nexport default Modal;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport toml from 'toml';\n\nimport './Importer.css';\n\nimport {mix, clone} from '../util';\n\nclass Importer extends PureComponent {\n\n  static propTypes = {\n    defaults: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onError: PropTypes.func.isRequired\n  };\n\n  constructor (props) {\n    super(props);\n    this.handleFileChange = this.handleFileChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleFileChange (ev) {\n    const file = ev.target.files[0];\n    const domTarget = ev.target;\n    domTarget.value = '';\n\n    if (!window.confirm('Do you want to overwrite current config?')) {\n      return;\n    }\n\n    if (file.name.match(/.*\\.toml$/)) {\n      var reader = new window.FileReader();\n\n      reader.onload = _ => {\n        let importedData;\n\n        try {\n          importedData = toml.parse(reader.result);\n        } catch (err) {\n          this.props.onError(`Couldn't parse configuration file. ${err.toString()}`);\n          return;\n        }\n\n        const data = mix(clone(this.props.defaults), importedData);\n        domTarget.blur();\n        this.props.onChange(data);\n      };\n\n      reader.readAsText(file);\n    } else {\n      this.props.onError('Please import a .toml configuration file.');\n    }\n  }\n\n  handleClick () {\n    this.refs.fileInput.click();\n  }\n\n  render () {\n    return (\n      <button\n        className='mdl-button mdl-button--icon mdl-js-button mdl-js-ripple-efect import'\n        onClick={this.handleClick}>\n\n        <input\n          type='file'\n          ref='fileInput'\n          onChange={this.handleFileChange} />\n\n        <i className='material-icons' id='upload'>file_upload</i>\n        <span className='mdl-tooltip' htmlFor='upload'>Load Config File</span>\n      </button>\n    );\n  }\n}\n\nexport default Importer;\n","/* global Blob */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Preview.css';\n\nimport Importer from './Importer';\n\nimport { joinPath, basePath } from '../system';\n\n// TODO [ToDr] move to some common?\nimport {fillDescription} from './Editor';\nimport {data} from \"../util\";\n\nclass Preview extends Component {\n  static propTypes = {\n    settings: PropTypes.object.isRequired,\n    defaults: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onError: PropTypes.func.isRequired\n  };\n\n  generateConfig = () => {\n    const {settings, defaults} = this.props;\n    const data = toToml(settings, defaults);\n    const filename = 'config.toml';\n    const blob = new Blob([data], {type: 'text/toml'});\n    if (window.navigator.msSaveOrOpenBlob) {\n      window.navigator.msSaveBlob(blob, filename);\n    } else {\n      const elem = window.document.createElement('a');\n      elem.href = window.URL.createObjectURL(blob);\n      elem.download = filename;\n      document.body.appendChild(elem);\n      elem.click();\n      document.body.removeChild(elem);\n    }\n  }\n\n  render () {\n    const {settings, defaults} = this.props;\n    return (\n      <div className='mdl-card mdl-shadow--6dp preview-card'>\n        <div className='mdl-card__title'>\n          <div className='preview-title mdl-card__title-text'>\n            config.toml\n          </div>\n        </div>\n        <div className='mdl-card__actions mdl-card--border'>\n          <textarea className='preview-editor' readOnly value={toToml(settings, defaults)} />\n        </div>\n        <div className='mdl-card__menu'>\n          <Importer defaults={defaults} onChange={this.props.onChange} onError={this.props.onError} />\n          <a\n            className='mdl-button mdl-button--icon mdl-js-button mdl-js-ripple-efect'\n            target='_blank'\n            rel='noopener noreferrer'\n            href={window.location.toString()}>\n            <i className='material-icons' id='link'>link</i>\n            <span className='mdl-tooltip' htmlFor='link'>Link to this Config File</span>\n          </a>\n          <button\n            className='mdl-button mdl-button--icon mdl-js-button mdl-js-ripple-efect'\n            onClick={this.generateConfig}>\n            <i className='material-icons' id='download'>cloud_download</i>\n            <span className='mdl-tooltip' htmlFor='download'>Download Config File</span>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction toToml (settings, defaults) {\n  const toml = Object.keys(settings)\n    .filter(section => section !== '__internal')\n    .reduce((acc, section) => {\n      // for old configs the section might be missing in defaults\n      defaults[section] = defaults[section] || {};\n\n      data[section] = data[section] || {};\n      const sectionName = data[section].section || section;\n      const sectionDescription = data[section].description || \"\";\n\n      acc.push(\"\\n\");\n      acc = acc.concat(toSectionHeader(sectionName, 120));\n      acc.push(split_comment_at(sectionDescription, 118));\n\n      const vals = Object.keys(settings[section])\n        .filter(key => !isEqual(settings[section][key], defaults[section][key]))\n        .map(key => {\n          const val = settings[section][key];\n          const comment = toComment(settings, section, key, val);\n          const setting = `${key} = ${toVal(val)}`;\n          return `\\n${comment}\\n${setting}`;\n        });\n\n      if (vals.length) {\n        acc.push(`\\n[${section}]`);\n      }\n\n      return acc.concat(vals);\n    }, []);\n\n  if (!toml.length) {\n    toml.push(\n      '',\n      '',\n      '# All values you use are defaults. Config is not needed.'\n    );\n  }\n\n  const { platform } = settings.__internal || defaults.__internal;\n  const configPath = joinPath([basePath(platform), 'config.toml'], platform);\n  toml.unshift(\n    '# This config should be placed in following path:',\n    `#   ${configPath}`,\n  );\n\n  return toml.join('\\n');\n}\n\nfunction isEqual (a, b) {\n  // TODO [todr] optimize\n  return JSON.stringify(a) === JSON.stringify(b);\n}\n\n/**\n * Splits a string at word boundaries so that each line is at most `line_length` long, and then prefixes each line\n * with a comment character\n */\nfunction split_comment_at(multi_comment, line_length) {\n  const split = (comment) => {\n    const lines = [];\n    const words = comment.split(/\\s/);\n    while (words.length > 0) {\n      let line = \"#\";\n      while (words.length > 0 && (line.length + words[0].length < line_length)) {\n        line += \" \" + words.shift();\n      }\n      lines.push(line);\n    }\n    return lines.join('\\n');\n  };\n  const comments = multi_comment.split('\\n');\n  return comments.map(split).join('\\n');\n}\n\nfunction toSectionHeader(heading, width) {\n  const banner = \"#\".repeat(width);\n  const inner = `#${\" \".repeat(width-2)}#`;\n  const left_pad = Math.floor((width-2 - heading.length) / 2);\n  const right_pad = width - heading.length - 2 - left_pad;\n  let title = `#${\" \".repeat(left_pad)}${heading}${\" \".repeat(right_pad)}#`;\n  return [banner, inner, title, inner, banner];\n}\n\nfunction toComment (settings, section, key, value) {\n  // for old configs the section might be missing in defaults\n  data[section] = data[section] || {};\n  data[section][key] = data[section][key] || {};\n\n  let comment;\n  if (typeof data[section][key].description === 'object') {\n    if ('suggestions' in data[section][key] && !(value in data[section][key].description)) {\n      comment = `Custom ${key.toLowerCase()}`;\n    }\n    comment = fillDescription(data[section][key].description[value], value);\n  } else {\n    comment = fillDescription(data[section][key].description, value);\n  }\n  return split_comment_at(comment, 118);\n}\n\nfunction toVal (val) {\n  if (typeof val === 'boolean') {\n    return `${val}`;\n  }\n\n  if (typeof val === 'number') {\n    return `${val}`;\n  }\n\n  if (Array.isArray(val)) {\n    return `[${val.map(v => toVal(v)).join(', ')}]`;\n  }\n\n  // Escape windows paths\n  val = val ? val.replace(/\\\\([^\\\\])/g, '\\\\\\\\$1') : val;\n  return `\"${val}\"`;\n}\n\nexport default Preview;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Presets.css';\n\nimport Select from '../controls/Select';\nimport Item from '../Item';\n\nimport mining from './mining.json';\nimport ports from './ports.json';\n\nimport {mix, clone} from '../../util';\n\nfunction toVal (val) {\n  return { name: val, value: val };\n}\n\nconst presets = {\n  'None': null,\n  'Defaults': null,\n  'Mining': mining,\n  'Non-standard Ports': ports\n};\n\nclass Presets extends PureComponent {\n\n  static propTypes = {\n    preset: PropTypes.string,\n    defaults: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired\n  };\n\n  static defaultProps = {\n    preset: 'None'\n  };\n\n  change = (preset) => {\n    if (preset === 'None') {\n      return;\n    }\n\n    if (this.props.preset === 'None') {\n      if (!window.confirm('Do you want to overwrite current config?')) {\n        this.forceUpdate();\n        return;\n      }\n    }\n\n    const data = mix(clone(this.props.defaults), clone(presets[preset] || {}));\n    this.props.onChange(preset, data);\n  };\n\n  render () {\n    const {preset} = this.props;\n\n    return (\n      <div className='presets'>\n        <Item title={''} description={'Load predefined config.'}>\n          <Select\n            onChange={this.change}\n            value={preset}\n            values={Object.keys(presets).map(toVal)}\n            id={'presets'}\n            disabled={false}\n            />\n        </Item>\n      </div>\n    );\n  }\n}\n\nexport default Presets;\n","import Presets from './Presets';\nexport default Presets;\n","import React, { Component, Fragment } from 'react';\nimport isEqual from 'lodash.isequal';\n\nimport TopBar from './components/TopBar';\nimport Modal from './components/Modal';\nimport Editor from './components/Editor';\nimport Preview from './components/Preview';\nimport Presets from './components/Presets';\n\nimport { detectPlatform } from './system';\nimport {data} from \"./util\";\n\nfunction loadFromURL () {\n  const hash = window.location.hash;\n  if (!hash.startsWith('#config=')) {\n    return null;\n  }\n\n  try {\n    const config = hash.split('=')[1];\n    return JSON.parse(window.atob(config));\n  } catch (e) {\n    console.warn('Error parsing config from URL: ', e);\n    return null;\n  }\n}\n\nfunction loadFromLocalStorage () {\n  try {\n    return JSON.parse(window.localStorage.getItem('last-config'));\n  } catch (e) {\n    window.localStorage.setItem('last-config', null);\n    return null;\n  }\n}\n\nfunction loadSettings () {\n  const defaultSettings = generateDefaults(data);\n  try {\n    let settings = loadFromLocalStorage();\n    const url = loadFromURL();\n    if (settings && url) {\n      const diff = JSON.stringify(settings) !== JSON.stringify(url);\n      if (diff && window.confirm('Detected config in URL. Do you want to override your current config?')) {\n        settings = null;\n      }\n    }\n    if (!settings && url) {\n      settings = url;\n    }\n    if (settings && typeof settings === 'object') {\n      // make sure the sections are always created\n      const errors = [];\n      Object.keys(defaultSettings).forEach(key => {\n        settings[key] = settings[key] || {};\n        Object.keys(defaultSettings[key]).forEach(prop => {\n          let settingsValue = settings[key][prop];\n          let defaultSettingsValue = defaultSettings[key][prop];\n          if (settingsValue === undefined) {\n            settings[key][prop] = defaultSettingsValue;\n          } else if (typeof settingsValue !== typeof defaultSettingsValue) {\n            errors.push({\n              section: key,\n              prop,\n              value: settingsValue,\n              type: typeof settingsValue,\n              expected: typeof defaultSettingsValue});\n            console.error(`Incorrect type for config item ${key}.${prop} with value ${JSON.stringify(settingsValue)} (found ${typeof settingsValue}, expected ${typeof defaultSettingsValue})`);\n            settings[key][prop] = defaultSettingsValue;\n          }\n        });\n      });\n      return {settings, errors};\n    }\n  } catch (e) {\n    console.warn(e);\n  }\n\n  return {settings: defaultSettings, errors: []};\n}\n\nfunction saveSettings (settings) {\n  const defaultSettings = generateDefaults(data);\n  const cloned = JSON.parse(JSON.stringify(settings));\n\n  Object.keys(defaultSettings).forEach(section => {\n    Object.keys(defaultSettings[section]).forEach(prop => {\n      if (isEqual(cloned[section][prop], defaultSettings[section][prop])) {\n        delete cloned[section][prop];\n      }\n    });\n\n    if (Object.keys(cloned[section]).length === 0) {\n      delete cloned[section];\n    }\n  });\n\n  const json = JSON.stringify(cloned);\n  try {\n    window.localStorage.setItem('last-config', json);\n    window.location.hash = 'config=' + window.btoa(json);\n  } catch (e) {\n  }\n}\n\nclass App extends Component {\n\n  constructor (props) {\n    super(props);\n\n    const {settings, errors} = loadSettings();\n\n    let modal;\n    if (!errors.length) {\n      modal = {visible: false};\n    } else {\n      let lis = errors.map(({section, prop, value, type, expected}, i) =>\n        (<li key={i}><em>{section}.{prop}</em> has value <em>{JSON.stringify(value)}</em> of type <em>{type}</em>; expected type <em>{expected}</em></li>));\n      modal = {\n        visible: true,\n        title: 'Warning',\n        content: (\n          <Fragment>\n            <p>{lis.length > 1 ? 'Some items' : 'An item'} couldn't be parsed from the loaded config:</p>\n            <ul>{lis}</ul>\n          </Fragment>\n        )\n      };\n    }\n\n    this.state = {\n      preset: undefined,\n      settings,\n      defaults: generateDefaults(data),\n      modal\n    };\n  }\n\n  handleChange = (settings) => {\n    saveSettings(settings);\n    this.setState({\n      preset: undefined,\n      settings\n    });\n  };\n\n  handlePreset = (preset, settings) => {\n    saveSettings(settings);\n    this.setState({\n      preset,\n      settings\n    });\n  };\n\n  handleError = (error) => {\n    this.setState({\n      modal: {\n        visible: true,\n        title: 'Error',\n        content: (\n          <p>{error}</p>\n        )\n      }\n    });\n  };\n\n  render () {\n    const {settings, defaults, preset, modal} = this.state;\n\n    return (\n      <div className='mdl-layout mdl-js-layout mdl-layout--fixed-header'>\n        <TopBar />\n        <main className='mdl-layout__content'>\n          <div className='mdl-grid'>\n            <div className='mdl-cell mdl-cell--6-col mdl-cell--12-col-tablet'>\n              <Editor settings={settings} onChange={this.handleChange} />\n            </div>\n            <div className='mdl-cell mdl-cell--6-col mdl-cell--12-col-tablet'>\n              <Presets preset={preset} defaults={defaults} onChange={this.handlePreset} />\n              <Preview settings={settings} defaults={defaults} onChange={this.handleChange} onError={this.handleError} />\n            </div>\n          </div>\n        </main>\n        <Modal title={modal.title} isOpen={modal.visible} onClose={() => this.setState({modal: {visible: false}})}>\n          {modal.content}\n        </Modal>\n      </div>\n    );\n  }\n}\n\nfunction generateDefaults (settings) {\n  const defaults = Object.keys(settings).reduce((data, section) => {\n    data[section] = Object.keys(settings[section])\n    .filter(key => (typeof settings[section][key] === 'object') && (settings[section][key].default !== undefined))\n    .reduce((d, key) => {\n      d[key] = settings[section][key].default;\n      return d;\n    }, {});\n    return data;\n  }, {});\n\n  defaults.__internal.platform = detectPlatform();\n  return defaults;\n}\n\nexport default App;\n","import React from 'react';\n\nconst Loader = ({children}) => {\n    return (\n        <div style={{ marginTop: 20, textAlign: \"center\" }}>\n            <div className=\"mdl-spinner mdl-spinner--single-color mdl-js-spinner is-active\"></div>\n            <p>{children}</p>\n        </div>\n    )\n};\n\nexport default Loader;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './avenir-std.css';\nimport './material.css';\nimport 'material-design-lite/material.js';\nimport 'getmdl-select/getmdl-select.min.css';\nimport 'getmdl-select/getmdl-select.min.js';\nimport './index.css';\nimport {loadSource} from \"./util\";\nimport Loader from \"./components/Loader\";\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(<Loader/>, rootElement);\n\nloadSource()\n    .then(() => {\n        ReactDOM.render(<App />, rootElement);\n    })\n    .catch(e => {\n        console.error(e);\n    });\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst stylesNormal = {overflow: 'visible'};\nconst stylesLarge = {overflow: 'visible', height: 'auto'};\n\nfunction Item ({title, description, children, disabled, large}) {\n  const isDisabled = disabled ? 'disabled' : '';\n  return (\n    <li\n      className={`mdl-list__item mdl-list__item--two-line ${isDisabled}`}\n      style={large ? stylesLarge : stylesNormal}\n      >\n      <span className='mdl-list__item-primary-content'>\n        <span>{title}</span>\n        <span className='mdl-list__item-sub-title'>\n          {description}\n        </span>\n      </span>\n      <span className='mdl-list__item-secondary-content'>\n        {children}\n      </span>\n    </li>\n  );\n}\n\nItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.array]).isRequired,\n  disabled: PropTypes.bool,\n  large: PropTypes.bool\n};\n\nItem.defaultPropTypes = {\n  disabled: false,\n  large: false\n};\n\nexport default Item;\n"],"sourceRoot":""}